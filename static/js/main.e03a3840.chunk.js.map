{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","getReorderedGoods","goods","visibleGoods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","reverse","setState","alphabeticSort","lengthSort","reset","className","type","this","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiBE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,kBAAoB,SAClBC,EADkB,GAGd,IADFH,EACC,EADDA,SAAUD,EACT,EADSA,WAGNK,EAAY,YAAOD,GAkBzB,OAhBAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQP,GACN,KAAKL,EAASa,SACZ,OAAOF,EAAEG,cAAcF,GAEzB,KAAKZ,EAASe,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OAEtB,QACE,OAAO,MAGTZ,GACFK,EAAaQ,UAGRR,GA7BX,EAgCEQ,QAAU,WACR,EAAKC,UAAS,SAAAf,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAlCzB,EAsCEe,eAAiB,WACf,EAAKD,SAAS,CAAEb,SAAUL,EAASa,YAvCvC,EA0CEO,WAAa,WACX,EAAKF,SAAS,CAAEb,SAAUL,EAASe,UA3CvC,EA8CEM,MAAQ,WACN,EAAKH,SAAS,CAAEb,SAAUL,EAASM,KAAMF,YAAY,KA/CzD,4CAkDE,WACE,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBE,KAAKrB,MAAME,WAAaL,EAASa,SAC1D,WACA,IACJY,QAASD,KAAKL,eALhB,iCAUA,wBACEI,KAAK,SACLD,UAAS,4BAAuBE,KAAKrB,MAAME,WAAaL,EAASe,OAC7D,WACA,IACJU,QAASD,KAAKJ,WALhB,4BAUA,wBACEG,KAAK,SACLD,UAAS,4BAAwBE,KAAKrB,MAAMC,WAExC,GADA,YAEJqB,QAASD,KAAKP,QALhB,sBAUEO,KAAKrB,MAAME,WAAaL,EAASM,MAAQkB,KAAKrB,MAAMC,aACpD,wBACEmB,KAAK,SACLD,UAAU,4BACVG,QAASD,KAAKH,MAHhB,sBAUJ,6BACE,6BACGG,KAAKjB,kBAAkBN,EAAiBuB,KAAKrB,OAAOuB,KAAI,SAAAC,GAAI,OAC3D,oBAAe,UAAQ,OAAvB,SACGA,GADMA,iBAlGvB,GAAyBC,IAAMC,WC/B/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e03a3840.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  getReorderedGoods = (\n    goods: string[],\n    { sortType, isReversed }: ReorderOptions,\n  ) => {\n    // To avoid the original array mutation\n    const visibleGoods = [...goods];\n\n    visibleGoods.sort((a, b) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return a.localeCompare(b);\n\n        case SortType.LENGTH:\n          return a.length - b.length;\n\n        default:\n          return 0;\n      }\n    });\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return visibleGoods;\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  alphabeticSort = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  lengthSort = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reset = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${this.state.sortType !== SortType.ALPHABET\n              ? 'is-light'\n              : ''}`}\n            onClick={this.alphabeticSort}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${this.state.sortType !== SortType.LENGTH\n              ? 'is-light'\n              : ''}`}\n            onClick={this.lengthSort}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${!this.state.isReversed\n              ? 'is-light'\n              : ''}`}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(this.state.sortType !== SortType.NONE || this.state.isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {this.getReorderedGoods(goodsFromServer, this.state).map(good => (\n              <li key={good} data-cy=\"good\">\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}